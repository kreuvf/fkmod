diff --git a/src/component.cpp b/src/component.cpp
index 1a465a2..32dd183 100644
--- a/src/component.cpp
+++ b/src/component.cpp
@@ -109,6 +109,9 @@ UDWORD getComponentRadius(BASE_STATS *psComponent)
 	/* VTOL bombs are only stats allowed to have NULL ComponentIMD */
 	if (StatIsComponent(psComponent) != COMP_WEAPON
 	    || (((WEAPON_STATS *)psComponent)->weaponSubClass != WSC_BOMB
+			&& ((WEAPON_STATS *)psComponent)->weaponSubClass != WSC_CLUSTERBOMB
+			&& ((WEAPON_STATS *)psComponent)->weaponSubClass != WSC_HEAVYBOMB
+			&& ((WEAPON_STATS *)psComponent)->weaponSubClass != WSC_HOTBOMB
 	        && ((WEAPON_STATS *)psComponent)->weaponSubClass != WSC_EMP))
 	{
 		ASSERT(ComponentIMD, "No ComponentIMD!");
@@ -278,6 +281,9 @@ void displayComponentButton(BASE_STATS *Stat, const Vector3i *Rotation, const Ve
 	/* VTOL bombs are only stats allowed to have NULL ComponentIMD */
 	if (StatIsComponent(Stat) != COMP_WEAPON
 	    || (((WEAPON_STATS *)Stat)->weaponSubClass != WSC_BOMB
+			&& ((WEAPON_STATS *)Stat)->weaponSubClass != WSC_CLUSTERBOMB
+			&& ((WEAPON_STATS *)Stat)->weaponSubClass != WSC_HEAVYBOMB
+			&& ((WEAPON_STATS *)Stat)->weaponSubClass != WSC_HOTBOMB
 	        && ((WEAPON_STATS *)Stat)->weaponSubClass != WSC_EMP))
 	{
 		ASSERT(ComponentIMD, "No ComponentIMD");
diff --git a/src/oprint.cpp b/src/oprint.cpp
index ee3e6d6..24d6ec7 100644
--- a/src/oprint.cpp
+++ b/src/oprint.cpp
@@ -137,6 +137,56 @@ static void printWeaponInfo(const WEAPON_STATS *psStats)
 	case WSC_EMP:
 		pWSC = "WSC_EMP";
 		break;
+	/* New weapon subclasses for FK mod and some generic subclasses for other projects */
+	/* Added by Kreuvf 2012-06-03 */
+	case WSC_AACANNON:
+		pWSC = "WSC_AACANNON";
+		break;
+	case WSC_CLUSTERBOMB:
+		pWSC = "WSC_CLUSTERBOMB";
+		break;
+	case WSC_HEAVYBOMB:
+		pWSC = "WSC_HEAVYBOMB";
+		break;
+	case WSC_HOTBOMB:
+		pWSC = "WSC_HOTBOMB";
+		break;
+	case WSC_HOTHOWITZER:
+		pWSC = "WSC_HOTHOWITZER";
+		break;
+	case WSC_LASER:
+		pWSC = "WSC_LASER";
+		break;
+	case WSC_AALASER:
+		pWSC = "WSC_AALASER";
+		break;
+	case WSC_GEN0:
+		pWSC = "WSC_GEN0";
+		break;
+	case WSC_GEN1:
+		pWSC = "WSC_GEN1";
+		break;
+	case WSC_GEN2:
+		pWSC = "WSC_GEN2";
+		break;
+	case WSC_GEN3:
+		pWSC = "WSC_GEN3";
+		break;
+	case WSC_GEN4:
+		pWSC = "WSC_GEN4";
+		break;
+	case WSC_GEN5:
+		pWSC = "WSC_GEN5";
+		break;
+	case WSC_GEN6:
+		pWSC = "WSC_GEN6";
+		break;
+	case WSC_GEN7:
+		pWSC = "WSC_GEN7";
+		break;
+	case WSC_GEN8:
+		pWSC = "WSC_GEN8";
+		break;
 	default:
 		pWSC = "UNKNOWN SUB CLASS";
 		break;
diff --git a/src/projectile.cpp b/src/projectile.cpp
index 1d38191..972681a 100644
--- a/src/projectile.cpp
+++ b/src/projectile.cpp
@@ -552,7 +552,8 @@ bool proj_SendProjectileAngled(WEAPON *psWeap, SIMPLE_OBJECT *psAttacker, int pl
 				/* firing sound emitted from source */
 				audio_PlayObjDynamicTrack(psProj->psSource, psStats->iAudioFireID, NULL);
 				/* GJ HACK: move howitzer sound with shell */
-				if (psStats->weaponSubClass == WSC_HOWITZERS)
+				/* Kreuvf: Added HOTHOWITZER */
+				if ( (psStats->weaponSubClass == WSC_HOWITZERS) || (psStats->weaponSubClass == WSC_HOTHOWITZER) )
 				{
 					audio_PlayObjDynamicTrack(psProj, ID_SOUND_HOWITZ_FLIGHT, NULL);
 				}
diff --git a/src/stats.cpp b/src/stats.cpp
index ec3412f..010399d 100644
--- a/src/stats.cpp
+++ b/src/stats.cpp
@@ -394,7 +394,7 @@ bool loadWeaponStats(const char *pFileName)
 		{
 			psStats->distanceExtensionFactor = 120;
 		}
-		else if (psStats->weaponSubClass == WSC_AAGUN)
+		else if (psStats->weaponSubClass == WSC_AAGUN || psStats->weaponSubClass == WSC_AACANNON)
 		{
 			psStats->distanceExtensionFactor = 100;
 		}
@@ -1494,6 +1494,71 @@ bool getWeaponSubClass(const char *subClass, WEAPON_SUBCLASS *wclass)
 	{
 		*wclass = WSC_EMP;
 	}
+	/* New weapon subclasses for FK mod and some generic subclasses for other projects */
+	else if (strcmp(subClass, "A-A CANNON") == 0)
+	{
+		*wclass = WSC_AACANNON;
+	}
+	else if (strcmp(subClass, "CLUSTER BOMB") == 0)
+	{
+		*wclass = WSC_CLUSTERBOMB;
+	}
+	else if (strcmp(subClass, "HEAVY BOMB") == 0)
+	{
+		*wclass = WSC_HEAVYBOMB;
+	}
+	else if (strcmp(subClass, "HOT BOMB") == 0)
+	{
+		*wclass = WSC_HOTBOMB;
+	}
+	else if (strcmp(subClass, "HOT HOWITZER") == 0)
+	{
+		*wclass = WSC_HOTHOWITZER;
+	}
+	else if (strcmp(subClass, "LASER") == 0)
+	{
+		*wclass = WSC_LASER;
+	}
+	else if (strcmp(subClass, "A-A LASER") == 0)
+	{
+		*wclass = WSC_AALASER;
+	}
+	else if (strcmp(subClass, "GENERIC 0") == 0)
+	{
+		*wclass = WSC_GEN0;
+	}
+	else if (strcmp(subClass, "GENERIC 1") == 0)
+	{
+		*wclass = WSC_GEN1;
+	}
+	else if (strcmp(subClass, "GENERIC 2") == 0)
+	{
+		*wclass = WSC_GEN2;
+	}
+	else if (strcmp(subClass, "GENERIC 3") == 0)
+	{
+		*wclass = WSC_GEN3;
+	}
+	else if (strcmp(subClass, "GENERIC 4") == 0)
+	{
+		*wclass = WSC_GEN4;
+	}
+	else if (strcmp(subClass, "GENERIC 5") == 0)
+	{
+		*wclass = WSC_GEN5;
+	}
+	else if (strcmp(subClass, "GENERIC 6") == 0)
+	{
+		*wclass = WSC_GEN6;
+	}
+	else if (strcmp(subClass, "GENERIC 7") == 0)
+	{
+		*wclass = WSC_GEN7;
+	}
+	else if (strcmp(subClass, "GENERIC 8") == 0)
+	{
+		*wclass = WSC_GEN8;
+	}
 	else
 	{
 		ASSERT(!"Invalid weapon sub class", "Invalid weapon sub class: %s", subClass);
@@ -1525,6 +1590,22 @@ const char *getWeaponSubClass(WEAPON_SUBCLASS wclass)
 	case WSC_BOMB: return "BOMB";
 	case WSC_COMMAND: return "COMMAND";
 	case WSC_EMP: return "EMP";
+	case WSC_AACANNON: return "A-A CANNON";
+	case WSC_CLUSTERBOMB: return "CLUSTER BOMB";
+	case WSC_HEAVYBOMB: return "HEAVY BOMB";
+	case WSC_HOTBOMB: return "HOT BOMB";
+	case WSC_HOTHOWITZER: return "HOT HOWITZER";
+	case WSC_LASER: return "LASER";
+	case WSC_AALASER: return "A-A LASER";
+	case WSC_GEN0: return "GENERIC 0";
+	case WSC_GEN1: return "GENERIC 1";
+	case WSC_GEN2: return "GENERIC 2";
+	case WSC_GEN3: return "GENERIC 3";
+	case WSC_GEN4: return "GENERIC 4";
+	case WSC_GEN5: return "GENERIC 5";
+	case WSC_GEN6: return "GENERIC 6";
+	case WSC_GEN7: return "GENERIC 7";
+	case WSC_GEN8: return "GENERIC 8";
 	case WSC_NUM_WEAPON_SUBCLASSES: break;
 	}
 	ASSERT(false, "No such weapon subclass");
diff --git a/src/statsdef.h b/src/statsdef.h
index 922f2ac..9582c68 100644
--- a/src/statsdef.h
+++ b/src/statsdef.h
@@ -169,6 +169,23 @@ enum WEAPON_SUBCLASS
 	WSC_BOMB,
 	WSC_COMMAND,
 	WSC_EMP,
+	/* New weapon subclasses for FK mod and some generic subclasses for other projects */
+	WSC_AACANNON,
+	WSC_CLUSTERBOMB,
+	WSC_HEAVYBOMB,
+	WSC_HOTBOMB,
+	WSC_HOTHOWITZER,
+	WSC_LASER,
+	WSC_AALASER,
+	WSC_GEN0,
+	WSC_GEN1,
+	WSC_GEN2,
+	WSC_GEN3,
+	WSC_GEN4,
+	WSC_GEN5,
+	WSC_GEN6,
+	WSC_GEN7,
+	WSC_GEN8,
 	WSC_NUM_WEAPON_SUBCLASSES,	/** The number of enumerators in this enum.	 */
 };
 
